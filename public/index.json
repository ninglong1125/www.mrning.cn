[{"content":" This section assumes you have already installed the Congo theme. The config files that ship with Congo contain all of the possible settings that the theme recognises. By default, many of these are commented out but you can simply uncomment them to activate or change a specific feature.\nBasic configuration #Before creating any content, there are a few things you should set for a new installation. Starting in the config.toml file, set the baseURL and languageCode parameters. The languageCode should be set to the main language that you will be using to author your content.\n# config/_default/config.toml baseURL = \u0026#34;https://your_domain.com/\u0026#34; languageCode = \u0026#34;en\u0026#34; The next step is to configure the language settings. Although Congo supports multilingual setups, for now, just configure the main language.\nLocate the languages.en.toml file in the config folder. If your main language is English you can use this file as is. Otherwise, rename it so that it includes the correct language code in the filename. For example, for French, rename the file to languages.fr.toml.\nThe language code in the language config filename should match the languageCode setting in config.toml. # config/_default/languages.en.toml title = \u0026#34;My awesome website\u0026#34; [params.author] name = \u0026#34;My name\u0026#34; image = \u0026#34;img/author.jpg\u0026#34; headline = \u0026#34;A generally awesome human\u0026#34; bio = \u0026#34;A little bit about me\u0026#34; links = [ { twitter = \u0026#34;https://twitter.com/username\u0026#34; } ] The [params.author] configuration determines how the author information is displayed on the website. The image should be placed in the site\u0026rsquo;s assets/ folder. Links will be displayed in the order they are listed.\nIf you need extra detail, further information about each of these configuration options, is covered in the Configuration section.\nColour schemes #Congo ships with a number of colour schemes out of the box. To change the scheme, simply set the colorScheme theme parameter. Valid options are congo (default), avocado, cherry, fire, ocean, sapphire and slate.\nThe colourScheme value should be provided in lowercase. # config/_default/params.toml colorScheme = \u0026#34;congo\u0026#34; Congo defines a three-colour palette that is used throughout the theme. Each main colour contains ten shades which are based upon the colours that are included in Tailwind.\nOrganising content #By default, Congo doesn\u0026rsquo;t force you to use a particular content type. In doing so you are free to define your content as you wish. You might prefer pages for a static site, posts for a blog, or projects for a portfolio.\nDirectory structure #Here\u0026rsquo;s a quick overview of a basic Congo project. All content is placed within the content folder:\n. ├── assets │ └── img │ └── author.jpg ├── config │ └── _default ├── content │ ├── _index.md │ ├── about.md │ └── posts │ ├── _index.md │ ├── first-post.md │ └── another-post │ ├── aardvark.jpg │ └── index.md └── themes └── congo The key thing to note here is that within the content directory, normal article pages are named index.md while list pages are named _index.md. Any assets that go along with the article should be placed in a sub-directory alongside the index file. It\u0026rsquo;s important to have a firm grasp of how Hugo expects content to be organised as the theme is designed to take full advantage of Hugo page bundles. Be sure to read the official Hugo docs for more information.\nFeature, cover and thumbnail images #The Congo theme supports displaying images on article listings and at the top of individual article pages. There are three types of images supported, each with their own use case: feature, cover and thumb.\nIn the example below, a cover and thumb image have been provided for the first-post article:\n. └── content └── posts ├── _index.md └── first-post ├── cover.jpg ├── index.md └── thumb.jpg The thumb image is used as the article thumbnail and will be displayed in article lists, and the cover image will be displayed at the top of the article content on individual article pages.\nThis example shows an article with a thumbnail image. In order to provide maximum performance, thumbnail images are automatically cropped and resized to a 4:3 ratio. Cover images will be automatically resized to fit their content, but any ratio is permitted. The feature image is a special type, and when present, it will be used in place of both the thumb and cover images. Feature images are also present in the article metadata, which is included when content is shared to third-party networks like Facebook and Twitter.\nThe theme will intelligently detect article images and automatically add them to your site. You don\u0026rsquo;t have to refer to them in the front matter and simply need to place an appropriately named file within the page resources. If the term feature, cover or thumb is found anywhere in the image filename, then it will be used for that purpose.\nThe Samples section provides a number of examples of these images (and you can view the source code to see the file structure).\nTaxonomies #Congo is also flexible when it comes to taxonomies. Some people prefer to use tags and categories to group their content, others prefer to use topics.\nHugo defaults to using posts, tags and categories out of the box and this will work fine if that\u0026rsquo;s what you want. If you wish to customise this, however, you can do so by creating a taxonomies.toml configuration file:\n# config/_default/taxonomies.toml topic = \u0026#34;topics\u0026#34; This will replace the default tags and categories with topics. Refer to the Hugo Taxonomy docs for more information on naming taxonomies.\nWhen you create a new taxonomy, you will need to adjust the navigation links on the website to point to the correct sections, which is covered below.\nMenus #Congo has two menus that can be customised to suit the content and layout of your site. The main menu appears in the site header and the footer menu appears at the bottom of the page just above the copyright notice.\nBoth menus are configured in the menus.en.toml file. Similarly to the languages config file, if you wish to use another language, rename this file and replace en with the language code you wish to use. Menu links will be sorted from lowest to highest weight, and then alphabetically by name.\n# config/_default/menus.en.toml [[main]] name = \u0026#34;Blog\u0026#34; pageRef = \u0026#34;posts\u0026#34; weight = 10 [[main]] name = \u0026#34;Topics\u0026#34; pageRef = \u0026#34;topics\u0026#34; weight = 20 [[main]] name = \u0026#34;GitHub\u0026#34; url = \u0026#34;https://github.com/jpanther/congo\u0026#34; weight = 30 [main.params] icon = \u0026#34;github\u0026#34; showName = false target = \u0026#34;_blank\u0026#34; [[main]] identifier = \u0026#34;search\u0026#34; weight = 99 [main.params] action = \u0026#34;search\u0026#34; icon = \u0026#34;search\u0026#34; [[footer]] name = \u0026#34;Privacy\u0026#34; pageRef = \u0026#34;privacy\u0026#34; Basic links #The name parameter specifies the text that is used in the menu link. You can also optionally provide a title which fills the HTML title attribute for the link.\nThe pageRef parameter allows you to easily reference Hugo content pages and taxonomies. It is the quickest way to configure the menu as you can simply refer to any Hugo content item and it will automatically build the correct link. To link to external URLs, the url parameter can be used.\nFurther customisation can be achieved through the use of special theme parameters. Providing params within a link allows the addition of an icon, the ability to toggle the link text with showName and to optionally set a target for the URL. In the example above, the GitHub link will only display as an icon and will open the link in a new window.\nAction links #There is a special case for creating menu items for links that take theme actions. These are denoted using the action parameter, and a value of the action the link should perform. Action links allow for all the same custom parameters as other links and can be styled with an icon or text name.\nThere are three valid theme actions:\nappearance will create a link to the appearance switcher locale will create a drop down picker to access translated content search will create a link to the site search Both menus are completely optional and can be commented out if not required. Use the template provided in the default file as a guide.\nDetailed configuration #The steps above are the bare minimum configuration. If you now run hugo server you will be presented with a blank Congo website. Detailed configuration is covered in the Configuration section.\n","date":"2020/8/15","permalink":"/posts/getting-started/","section":"我的文章","summary":"This section assumes you have already installed the Congo theme and are ready to start with basic configuration tasks like selecting a colour scheme, menu and content structure.","title":"Getting Started"},{"content":"","date":null,"permalink":"/","section":"个人小站🦄","summary":"","title":"个人小站🦄"},{"content":" 记录生活，享受生活 您可以通过 RSS订阅所有博客文章\n","date":null,"permalink":"/posts/","section":"我的文章","summary":"记录生活，享受生活 您可以通过 RSS订阅所有博客文章","title":"我的文章"},{"content":"","date":null,"permalink":"/topics/","section":"Topics","summary":"","title":"Topics"}]